1. What are the advantages of typescript over javascript?
Answer: TypeScript is better than JavaScript in terms of language features, reference validation, project scalability, 
        collaboration within and between teams, developer experience, and code maintainability.

--------------------------------------------------------------------------------------------------      
2. How to use *ngIf in Angular?
Answer: A shorthand form of the directive, *ngIf="condition", is generally used, provided as an attribute of the anchor element for the inserted template.
        Angular expands this into a more explicit version, in which the anchor element is contained in an <ng-template> element.
        
        Ex:  <div *ngIf="condition">Content to render when condition is true.</div>
        
        Source: https://angular.io/api/common/NgIf#description
--------------------------------------------------------------------------------------------------
        
3. How to hide a html element using Angular ?
Answer: The ng-hide directive hides the HTML element if the expression evaluates to true.
        ng-hide is also a predefined CSS class in AngularJS, and sets the element's display to none.
        
        Ex:  Hide HTML: <input type="checkbox" ng-model="myVar">
            <div ng-hide="myVar">
            <h1>Welcome</h1>
            <p>Welcome to my home.</p>
            </div>
            
            Source: https://www.w3schools.com/angular/ng_ng-hide.asp#:~:text=AngularJS%20ng%2Dhide%20Directive&text=The%20ng%2Dhide%20directive%20hides,the%20element's%20display%20to%20none%20.


4. Revise the previous points about Angular?
-----------------------------------------------------------------------------------------------
5. What  is interface in TypeScript? Why do we use?
Answer: 
An interface defines the syntax that any entity must adhere to.
Interfaces define properties, methods, and events, which are the members of the interface.
Interfaces contain only the declaration of the members. It is the responsibility of the deriving class to define the members.
Syntax - 
interface interface_name 
{ 
}

Example: 
interface IPerson { 
   firstName:string, 
   lastName:string, 
   sayHi: ()=>string 
} 

var customer:IPerson = { 
   firstName:"Tom",
   lastName:"Hanks", 
   sayHi: ():string =>{return "Hi there"} 
}

--------------------------------------------------------------------------------------------------
6. Create typescript program to find the maximum of value of the given numbers.

	a.  Use spread attribute concepts
	b.  Pass different no. of numbers to function
	c.   display the maximum value 

--------------------------------------------------------------------------------------------------

7.  Perform the following operations in Angular Application

		a.  Create a new component :		Employee
		b.  Prepare the component so that it should display Employee Details
					Employee  Id 	:		10256
					Employee  Name 	:		Scott
					Employee  Job 	:		Manager
					Employee  Deptno 	:		10
					
		c.   Use Employee component tag in app component to see the result 

8.  What is default export in TypeScript?
Answer: Default exports are marked with the keyword default and there can only be one default export per module.

9.  Create typescript program to process customer details using object oriented programming.
			--> Class Name :	Customer
			-->	Class should allow the following parameters in constructor
							let c1:Customer = new Customer();
							let c2:Customer = new Customer(10256);
							let c3:Customer = new Customer(10256, “Scott”);
							let c4:Customer = new Customer(10256, “Scott”, “Hyd”);

			-->  	Declare required number of prope in the class. 
			-->  	Method :  ShowDetails() to display all the values in single Line.
						Eg:	Customer Details  ::   Id : 10256, Name : Scott, City : Hyd

10. Create a typescript program to implement the following requirement:

	a. create an interface named :  GPS   (getCoordinates)
	b. create an interface named :  MediaPlayer (start, stop, pause)
	c.  create a class named SmartPhone to implement above two interfaces.